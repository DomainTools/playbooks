args:
- default: false
  description: The creation date of the domain in the format of %Y-%m-%d
  isArray: false
  name: create_date
  required: true
  secret: false
- default: false
  description: Proximity risk score
  isArray: false
  name: proximity_score
  required: true
  secret: false
- default: false
  description: Threat profile risk score
  isArray: false
  name: threat_profile_score
  required: true
  secret: false
- default: false
  defaultValue: This domain
  description: Provide domain name for print out
  isArray: false
  name: domain_name
  required: false
  secret: false
- default: false
  defaultValue: '70'
  description: Proximity score given based on closeness to other risky domains.
  isArray: false
  name: proximity_score_threshold
  required: false
  secret: false
- default: false
  defaultValue: '7'
  description: Threshold for domain age as younger domains are riskier.
  isArray: false
  name: age_threshold
  required: false
  secret: false
- default: false
  defaultValue: '70'
  description: Threshold for threat profile score based on many evidence based findings.
  isArray: false
  name: threat_profile_score_threshold
  required: false
  secret: false
comment: Calculates the indicator's reputation.
commonfields:
  id: CalculateIndicatorReputation
  version: -1
enabled: false
name: CalculateIndicatorReputation
script: |-
  def find_indicator_reputation():
      create_date = demisto.args().get('create_date', None)
      response = demisto.executeCommand('CalculateAge', {'create_date': create_date})
      domain_age = response[0]['Contents'].get('age')
      proximity_score = int(demisto.args().get('proximity_score', 0))
      threat_profile_score = int(demisto.args().get('threat_profile_score', 0))
      proximity_score_threshold = int(demisto.args().get('proximity_score_threshold', 70))
      age_threshold = int(demisto.args().get('age_threshold', 7))
      threat_profile_score_threshold = int(demisto.args().get('threat_profile_score_threshold', 70))

      if proximity_score > proximity_score_threshold or threat_profile_score > threat_profile_score_threshold:
          return 'Bad'
      elif domain_age < age_threshold and (
              proximity_score < proximity_score_threshold or threat_profile_score < threat_profile_score_threshold):
          return 'Suspicious'
      else:
          return 'Good'


  def main():
      domain_name = demisto.args().get('domain_name', None)
      reputation = find_indicator_reputation()
      demisto.results({
          'Type': entryTypes['note'],
          'ContentsFormat': formats['json'],
          'Contents': {'reputation': reputation},
          'HumanReadable': '{} has a {} Risk Reputation'.format(domain_name, reputation),
          'EntryContext': {}
      })


  if __name__ in ['__main__', '__builtin__', 'builtins']:
      main()
system: false
tags:
- DomainTools
timeout: '0'
type: python
subtype: python3
